/* Reset and base styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Noto Sans JP', -apple-system, BlinkMacSystemFont, 'Segoe UI',
    'Roboto', sans-serif;
  font-size: 16px;
  line-height: 1.6;
  color: #2d3748;
  background: linear-gradient(135deg, #a8d08d 0%, #68b0ab 100%);
  min-height: 100vh;
  position: relative;
}

/* Background pattern */
.background-pattern {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.1;
  background-image: radial-gradient(
    circle at 20px 20px,
    rgba(255, 255, 255, 0.2) 2px,
    transparent 0
  );
  background-size: 40px 40px;
  pointer-events: none;
  z-index: -1;
}

/* Header styles */
header {
  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  color: white;
  padding: 3rem 1rem;
  text-align: center;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

header::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  animation: shine 3s infinite;
  pointer-events: none;
}

@keyframes shine {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

.header-content {
  max-width: 800px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
}

.header-icon {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: #90ee90;
  animation: bounce 2s infinite;
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

.header-subtitle {
  font-size: 1.2rem;
  font-weight: 300;
  opacity: 0.9;
  margin-top: 0.5rem;
}

/* Main content styles */
main {
  padding: 4rem 0;
  position: relative;
  z-index: 1;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}

.tools-section {
  margin-bottom: 4rem;
}

.section-header {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 3rem;
  gap: 1rem;
}

.section-icon {
  font-size: 2rem;
  color: #4facfe;
  background: white;
  padding: 1rem;
  border-radius: 50%;
  box-shadow: 0 5px 15px rgba(79, 172, 254, 0.3);
}

.section-header h2 {
  font-size: 2rem;
  font-weight: 600;
  color: white;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

/* Grid layout */
.tools-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: 2rem;
  list-style: none;
}

/* 「その他」セクションのカード幅を調整 */
.tools-grid#work-list2 {
  /* PC表示で最大幅をカード1枚分程度に制限し、中央揃えにする */
  /* カードが1つの場合のデザイン調整 */
}

@media (min-width: 769px) {
  .tools-grid#work-list2 {
    max-width: 400px; /* カード幅350px + gapの半分程度を考慮 */
    margin-left: auto;
    margin-right: auto;
  }
  .tools-grid#work-list2 .tool-card {
    /* 必要であればここでさらに調整 */
  }
}

/* Card styles */
.tool-card {
  background: white;
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.2);
  display: flex;
  flex-direction: column;
}

.tool-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: linear-gradient(90deg, #4facfe, #00f2fe);
}

.tool-card:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.tool-card h3 {
  font-size: 1.3rem;
  font-weight: 600;
  color: #2d3748;
  margin-bottom: 1rem;
  line-height: 1.4;
}

.tool-card p {
  color: #4a5568;
  margin-bottom: 1.5rem;
  line-height: 1.6;
}

/* Button styles */
.tool-button {
  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  border: none;
  color: white;
  padding: 1rem 2rem;
  font-size: 1rem;
  font-weight: 600;
  border-radius: 50px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  width: 100%;
  position: relative;
  overflow: hidden;
  text-decoration: none;
  display: inline-block;
  text-align: center;
  box-shadow: 0 5px 15px rgba(79, 172, 254, 0.3);
  margin-top: auto;
}

.tool-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.5s;
}

.tool-button:hover::before {
  left: 100%;
}

.tool-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(79, 172, 254, 0.4);
}

.tool-button:active {
  transform: translateY(0);
}

/* Footer styles */
footer {
  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);
  color: white;
  padding: 2rem 1rem;
  position: relative;
  overflow: hidden;
}

.footer-content {
  max-width: 800px;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  position: relative;
  z-index: 1;
}

.footer-icon {
  color: #90ee90;
  font-size: 1.5rem;
  animation: rotate 3s infinite linear;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

footer a {
  color: #90ee90;
  text-decoration: none;
  font-weight: 500;
  transition: color 0.3s ease;
}

footer a:hover {
  color: #98fb98;
}

/* Responsive design */
@media (max-width: 768px) {
  header h1 {
    font-size: 2rem;
  }

  .header-subtitle {
    font-size: 1rem;
  }

  .container {
    padding: 0 1rem;
  }

  .tools-grid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .tool-card {
    padding: 1.5rem;
  }

  .section-header {
    flex-direction: column;
    gap: 0.5rem;
  }

  .section-header h2 {
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  header {
    padding: 2rem 1rem;
  }

  header h1 {
    font-size: 1.5rem;
  }

  .header-icon {
    font-size: 2rem;
  }

  main {
    padding: 2rem 0;
  }

  .tool-card {
    padding: 1rem;
  }

  .tool-button {
    padding: 0.8rem 1.5rem;
    font-size: 0.9rem;
  }
}

/* calcNumBags specific styles */
.container h1 {
  text-align: center;
  margin-bottom: 2rem;
  color: #333;
}

.calcNumBags-container {
  /* Use a more specific container if needed */
  background-color: #ffffff;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  max-width: 700px; /* Limit width for better readability on large screens */
  margin: 2rem auto; /* Centering the container */
}

.input-group {
  margin-bottom: 1.5rem;
}

.input-group label {
  display: block;
  margin-bottom: 0.5rem;
  color: #555;
  font-weight: bold;
}

.input-group input[type='number'] {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.calculation-step {
  background-color: #f9f9f9;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  border-radius: 6px;
  border-left: 5px solid #68b0ab; /* Accent color */
}

.calculation-step h2 {
  font-size: 1.2rem;
  color: #333;
  margin-bottom: 1rem;
}

.result-display {
  font-size: 1.5rem;
  font-weight: bold;
  color: #2d3748; /* Darker color for results */
  margin-bottom: 0.75rem;
  text-align: right;
}

.result-display span {
  color: #4facfe; /* Highlight color for numbers */
}

.inline-inputs,
.inline-elements {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.inline-inputs > div,
.inline-elements > div {
  flex-grow: 1;
}

.inline-inputs label {
  font-size: 0.9rem;
  margin-bottom: 0.25rem;
}

.inline-elements span {
  font-weight: bold;
}

.final-result .result-display {
  font-size: 1.8rem;
  color: #007bff; /* More prominent color for final result */
}

.notes {
  margin-top: 2rem;
  font-size: 0.9rem;
  color: #666;
  line-height: 1.5;
  text-align: center;
}

/* Responsive adjustments */
@media screen and (max-width: 768px) {
  .calcNumBags-container {
    padding: 1.5rem;
    margin: 1rem;
  }

  .inline-inputs,
  .inline-elements {
    flex-direction: column;
    align-items: stretch; /* Make items full width in column layout */
  }

  .inline-inputs > div,
  .inline-elements > div {
    margin-bottom: 0.5rem; /* Add some space between stacked items */
  }

  .result-display {
    font-size: 1.3rem;
  }

  .final-result .result-display {
    font-size: 1.6rem;
  }
}

@media screen and (max-width: 480px) {
  .container h1 {
    font-size: 1.5rem;
  }
  .calcNumBags-container {
    padding: 1rem;
  }
  .input-group input[type='number'],
  .result-display,
  .calculation-step h2 {
    font-size: 0.9rem;
  }
  .result-display {
    font-size: 1.1rem;
  }
  .final-result .result-display {
    font-size: 1.3rem;
  }
  .inline-inputs span,
  .inline-elements span {
    margin: 0.5rem 0; /* Adjust spacing for operators when stacked */
  }
}

/* Ensure calcNumBags styles are self-contained and don't overly rely on general styles if it's meant to be embeddable or standalone */
.calcNumBags-container form {
  display: flex;
  flex-direction: column;
}

/* Explicitly style spans within .inline-elements if they are used for values */
.inline-elements div span {
  color: #4facfe; /* Or your desired color for values */
  font-weight: normal; /* If only numbers should be bold, not labels */
}
/* Refinement: Ensure input fields in inline-inputs are not overly stretched if not desired */
.inline-inputs > div input[type='number'] {
  /* width: auto; */ /* Or a specific max-width like max-width: 150px; if needed */
}

/* Adjusting labels in inline-inputs for better alignment and space */
.inline-inputs > div {
  display: flex;
  flex-direction: column;
}
.inline-inputs > div label {
  margin-bottom: 0.3rem;
}

/* Make sure the text for calculated values (---) is visible and styled */
span[name],
span[id] {
  min-width: 30px; /* Ensure there's space for the numbers */
  display: inline-block; /* Allows for min-width */
  text-align: right; /* Keep numbers aligned if they vary in length */
}

/* Style for operators like ×, ÷, → */
.inline-inputs > span,
.inline-elements > span {
  font-size: 1.2rem;
  font-weight: bold;
  color: #555;
  align-self: center; /* Center operators vertically with inputs/text */
  padding: 0 0.5rem; /* Add some horizontal padding */
}

/* Refine spacing for calculation steps */
.calculation-step + .input-group,
.input-group + .calculation-step,
.calculation-step + .calculation-step {
  margin-top: 2rem; /* Add more vertical space between logical groups */
}

/* Final Result distinct styling */
.final-result {
  background-color: #e6f7ff; /* Light blue background */
  border-left-color: #007bff; /* Blue accent */
}

.final-result h2 {
  color: #0056b3; /* Darker blue for heading */
}
